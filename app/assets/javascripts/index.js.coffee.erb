$ ->

  map = null
  infowindow = new google.maps.InfoWindow()
  markers = []
  clusters = []
  filters = []
  showReports = true;

  updateFilters = () -> 
    filters = []

    $('#sites input').each((e) ->
      t = $(this)
      category_id = parseInt(t.val())
      checked = t.prop('checked')

      if (checked)
        filters.push(category_id)

      true
    )

    $('#lines input').each((e) ->
      t = $(this)
      category_id = parseInt(t.val())
      checked = t.prop('checked')

      if (checked)
        filters.push(category_id)

      true
    ) 

    localStorage.setItem("filters", JSON.stringify(filters))
    

  updateShowReports = () -> 
    showReports = $('#show_reports').prop('checked')
    reports = 0
    if (showReports)
      reports = 1
    localStorage.setItem("showReports", JSON.stringify(reports))

  $('#refresh_btn').click((e) ->
    updateFilters() 
    updateShowReports()
    updateURL()

    for polyline in polylines
       polyline.setVisible($.inArray(parseInt(polyline.category_id), filters) != -1)

    for report in reports_markers
      report.setVisible(showReports)

    updateViewport()
  )

  initShowReports = () ->
    parsed = JSON.parse(localStorage.getItem("showReports"))
    if (parsed?) 
      showReports = parsed == 1

    if gon.showReports
      showReports = parseInt(gon.showReports) == 1

    $('#show_reports').prop('checked', showReports)


  initFilters = () ->
    filters = Object.keys(gon.categories).filter((key) ->
      return gon.categories[key].is_initial == true 
    ).map((key) ->
      return parseInt(key)
    ) 

    parsed = JSON.parse(localStorage.getItem("filters"))
    if parsed?
      filters = parsed

    if gon.filters
      filters = gon.filters

    $('#sites input').each((e) ->
      t = $(this)
      category_id = parseInt(t.val())

      checked = $.inArray(category_id, filters) != -1

      t.prop('checked', checked)
      true
    )

    $('#lines input').each((e) ->
      t = $(this)
      category_id = parseInt(t.val())

      checked = $.inArray(category_id, filters) != -1

      t.prop('checked', checked)
      true
    )

  # update viewport
  updateViewport = ->
    bounds = map.getBounds()

    ne = map.getBounds().getNorthEast().toUrlValue(8)
    sw = map.getBounds().getSouthWest().toUrlValue(8)

    categories = filters.join(",")

    $.getJSON("/api/v1/sites/count?ne=#{ne}&sw=#{sw}&categories=#{categories}", (data) ->
      if data.count <= 500
        $.getJSON("/api/v1/sites/get?ne=#{ne}&sw=#{sw}&categories=#{categories}", (data) ->
          cluster.setMap(null) for cluster in clusters
          clusters = []
          for marker,i in markers by -1
            result = $.grep(data.sites, (e) -> 
               return e.id == marker.id
            )
            if (result.length == 0)
              marker.setMap(null);
              markers.splice(i, 1);

          for site in data.sites
            result = $.grep(markers, (e) ->
              return e.id == site.id
            )

            if result.length == 0
              icon = gon.categories[site.category_id]["icon"]
              
              if (site.custom_icon_url?)
                icon = site.custom_icon_url

              marker = new google.maps.Marker({
                position: new google.maps.LatLng(site.latitude, site.longitude),
                map: map,
                title: site.name,
                icon: icon,
                id: site.id
              })

              do (site, marker) ->
                google.maps.event.addListener(marker, 'click', showMarker(marker, site))

              markers.push marker
        )
      else
        zoom = map.getZoom() 
        $.getJSON("/api/v1/sites/cluster?categories=#{categories}&zoom=#{zoom}", (data) ->
           marker.setMap(null) for marker in markers
           markers = []
           cluster.setMap(null) for cluster in clusters
           clusters = []
           for cluster in data
              marker = new google.maps.Marker({
                position: new google.maps.LatLng(cluster.latitude, cluster.longitude),
                map: map,
                icon:
                   url: "<%= image_url "cluster.png" %>",
                   size: new google.maps.Size(53, 52),
                   origin: new google.maps.Point(0,0),
                   anchor: new google.maps.Point(26, 26)

              })
              
              clusters.push marker
        )
    )

  # Update url when map position or zoom change 
  updateURL = -> 
    reports = 0
    if (showReports)
      reports = 1

    history.pushState(null, document.title, gon.root_url+"?pos="+map.getCenter().toUrlValue(8)+"&zoom="+map.getZoom()+"&categories="+filters.join(",")+"&reports="+reports);

  handleRightClick = (evt) ->
    infowindow.setContent("<a href=\"#{gon.new_site_url}?pos=#{evt.latLng.toUrlValue(8)}\">#{gon.new_site_label}</a><br/><a href=\"#{gon.new_report_url}?pos=#{evt.latLng.toUrlValue(8)}\">#{gon.new_report_label}</a>")
    infowindow.setPosition(evt.latLng);
    infowindow.open(map);

  initMap = () ->
    pos = gon.pos  
    if gon.pos is null
      pos = 
        latitude: 19
        longitude: 0

    mapOptions = 
      center: new google.maps.LatLng(pos.latitude, pos.longitude)
      zoom: gon.zoom
      streetViewControlOptions:
        position: google.maps.ControlPosition.LEFT_BOTTOM
      zoomControlOptions:
        position: google.maps.ControlPosition.LEFT_BOTTOM
      scaleControl: true

    map = new google.maps.Map($("#map-canvas")[0], mapOptions)
    
    # Center map to current location if no position given
    if navigator.geolocation
      navigator.geolocation.getCurrentPosition((position) ->
        pos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);

        icon =
          url: gon.marker_url
          size: new google.maps.Size(96, 96)
          origin: new google.maps.Point(0, 0)
          anchor: new google.maps.Point(5, 5)
          scaledSize: new google.maps.Size(10, 10)

        marker = new google.maps.Marker(
          position: pos
          map: map
          icon: icon
          title: "Location"
        )

        if gon.pos is null
          map.setCenter(pos);
          map.setZoom(15);
      )

    google.maps.event.addListener(map, 'dragend', updateURL);
    google.maps.event.addListener(map, 'zoom_changed', updateURL);
    google.maps.event.addListener(map, 'idle', updateViewport);
    google.maps.event.addListener(map, 'rightclick', handleRightClick);
    
  # create map
  initMap()
  initFilters()
  initShowReports()
  
  # add lines
  polylines = for line in lines
       path = []
       
       line.path.forEach((elt, idx) -> 
         path.push(new google.maps.LatLng(elt[1], elt[0]))
       );
       
       polyline = new google.maps.Polyline(
         map: map
         path: path
         strokeColor: gon.categories[line.category_id]["color"]
         category_id: line.category_id
       )
   
       polyline.setVisible($.inArray(parseInt(line.category_id), filters) != -1)
   
       do (line) ->
         google.maps.event.addListener(polyline, 'click', () ->
           console.log line.id
         )
   
       polyline
   
  # add reports
  reports_markers = for report in reports
    marker = new google.maps.Marker(
      position: new google.maps.LatLng(report.latitude, report.longitude)
      map: map
      icon:
        url: "<%= image_url "warn_pin.png" %>"
    )

    marker.setVisible(showReports)

    do (report, marker) ->
      google.maps.event.addListener(marker, 'click', () ->

        content = "<p>#{report.description}</p>
        <a href=\"#{gon.show_report_url + '/' + report.id}\">#{gon.show_report_label}</a> 
         ";

        infowindow.setContent(content);
        infowindow.open(map,marker);
      )
    
    marker

  showMarker = (marker, site) ->
    return () ->
      $.get("/api/v1/sites/#{site.id}.json", (data) ->
        data.site.has_comments = () -> data.site.comments_count != 0
        data.site.has_pictures = () -> data.site.pictures_count != 0

        template = "
        <div style=\"min-width:250px\" >
        <h4>{{site.name}}</h4>
        <p>{{site.description}}</p>
        <a href=\"#{gon.show_site_url + '/' + site.id}\">
        <p class=\"pull-right\" style=\"color:#333 !important\">
        <span>
        <i class=\"fa fa-comment-o fa-x {{^site.has_comments}}transparent{{/site.has_comments}} \"></i>
        {{#site.has_comments}}<span class=\"badge fa-badge\">{{site.comments_count}}</span>{{/site.has_comments}}
        {{^site.has_comments}}<span class=\"badge fa-badge\" style=\"background-color: #00A65A !important\" >+</span>{{/site.has_comments}}
        </span> 
        | 
        <span {{^site.has_pictures}}class=\"transparent\"{{/site.has_pictures}} >
        <i class=\"fa fa-camera fa-x\"></i>
        {{#site.has_pictures}}<span class=\"fa-badge badge\">{{site.pictures_count}}</span>{{/site.has_pictures}}
        </span> 
        </p>
        </a>
        <br/>
        <br/>
        <a href=\"#{gon.show_site_url + '/' + site.id}\">#{gon.show_site_label}</a> 
        </div>
        ";

        output = Mustache.render(template, data);

        infowindow.setContent(output);
        infowindow.open(map,marker);
        ga('send', 'event', 'marker', 'clicked', site.id, 1);
      )

  # filters helpers

  $('#all_sites').click((e) ->
    $('#sites input').each((e) ->
      $(this).prop('checked', true) 
    ) 
  )

  $('#none_sites').click((e) ->
    $('#sites input').each((e) ->
      $(this).prop('checked', false) 
    ) 
  )

  $('#all_lines').click((e) ->
    $('#lines input').each((e) ->
      $(this).prop('checked', true) 
    ) 
  )

  $('#none_lines').click((e) ->
    $('#lines input').each((e) ->
      $(this).prop('checked', false) 
    ) 
  )

  # search box

  $('#q').val(localStorage.getItem("query"))
  localStorage.removeItem("query")
  
  $('#search_btn').click(() ->

    q = $('#q').val()

    url = "https://maps.googleapis.com/maps/api/geocode/json"
    $.get(url, {
      address: q
      sensor: false
      key: "<%= ENV['GOOGLE_MAP_API_KEY'] %>"
    }, (data) ->
      if data.results.length == 1
        lat = data.results[0].geometry.location.lat
        lng = data.results[0].geometry.location.lng
        localStorage.setItem("query", q)
        window.location = gon.root_url+"?pos="+lat+","+lng+"&zoom=17"
      else if (data.results.length >= 2)
        content = "<ul>"
        for result in data.results
          content += "<li><a onclick=\"localStorage.setItem('query', '#{result.formatted_address}')\" href=\"#{gon.root_url}?pos=#{result.geometry.location.lat},#{result.geometry.location.lng}&zoom=17\">#{result.formatted_address}</a></li>"
        content += "</ul>"
        $("#search_btn").popover("destroy")
        $("#search_btn").popover({content: content, title:gon.multiple_results_label, html: true, placement: 'bottom', trigger: 'manual|focus'}).popover('show')
      else
        $("#search_btn").popover("destroy")
        $("#search_btn").popover({content: gon.nothing_found_label, placement: 'bottom', trigger: 'manual|focus'}).popover('show')
    )
  )

  $('#q').keydown((e) ->
    if e.keyCode == 13
      $('#search_btn').trigger("click")
      e.preventDefault()
      false
  )

  $("#filters_btn").click(() ->
    $("#filters").css("right","20px")
    $("#filters_btn").hide();
  )

  $("#close_btn").click(() ->
    $("#filters").css("right","-250px")
    $("#filters_btn").show();
  )
