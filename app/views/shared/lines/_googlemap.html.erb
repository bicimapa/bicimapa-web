<script type="text/javascript">
function initMap() {

  map = new google.maps.Map(document.getElementById('map'), {
    center: new google.maps.LatLng(0, 0),
    zoom: 1
  });

  function initPolyline(polyline) {
    var colors = [];

    <% Category.where(variety: "LIN").all.each do |category| %>
      colors["<%= category.id %>"] = "<%= category.color %>";
    <% end %>

    $("#line_category_id").change(function() {
      polyline.setOptions({
        strokeColor: colors[$(this).val()]
      });
    });

    <% if line.path == nil %>
      polyline.setOptions({
        strokeColor: colors[$("#line_category_id").val()]
      });
    <% end %>


    google.maps.event.addListener(polyline, 'rightclick', function(e) {
      if (e.vertex == undefined) {
        return;
      }
      path = this.getPath()
      if (path.length > 2) {
        path.removeAt(e.vertex)
      }
    });

    function updateForm() {
      var wkt = new Wkt.Wkt();
      wkt.fromObject(polyline);
      document.getElementById('line_path').value = wkt.write();
    }
    
    updateForm()

    google.maps.event.addListener(polyline.getPath(), 'insert_at', function () {
      updateForm();
    });

    google.maps.event.addListener(polyline.getPath(), 'remove_at', function () {
      updateForm();
    });

    google.maps.event.addListener(polyline.getPath(), 'set_at', function () {
      updateForm();
    });
  }

  <% if line.path == nil %>
  var drawingManager = new google.maps.drawing.DrawingManager({
    drawingMode: google.maps.drawing.OverlayType.POLYLINE,
    drawingControl: true,
    drawingControlOptions: {
      position: google.maps.ControlPosition.TOP_CENTER,
      drawingModes: [
        google.maps.drawing.OverlayType.POLYLINE,
      ]
    },
    polylineOptions: {
      editable: true
    }
  });
  drawingManager.setMap(map);

  google.maps.event.addListener(drawingManager, 'polylinecomplete', function(polyline) {
    drawingManager.setMap(null);
    initPolyline(polyline);
  });

  <% else %>

  var wkt = new Wkt.Wkt();
  wkt.read("<%= line.path %>")
  polyline = wkt.toObject();

  polyline.setOptions({
    map: map,
    editable: <%= !(action_name == "show") %>,
    strokeColor: "<%= line.category.color %>"
  })

  bounds = new google.maps.LatLngBounds()
  polyline.getPath().forEach(function(latlng) { bounds.extend(latlng)})
  map.fitBounds(bounds)

  initPolyline(polyline);

  <% end %>
}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API_KEY']%>&libraries=drawing&callback=initMap"></script>
